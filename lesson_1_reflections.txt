How did viewing a diff between two versions of a file help you see the bug that was introduced?

It was easier to find what the bug was.
Many a times it helps in restoring the code to its original state in case of erroneous inputs.
When the output is not an enhanced verssion of the existing code but a deteriorated version then the version
control really is useful.



How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

By letting me go back to which ever of the versions I want to go back to to find a particular way a feature was implemented in the earlier versions. 
Also allows finding who made what changes in which version of the code.



Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git like systems are built specifically for dealing with coding files. The ones like Google Docs are meants to deal with docuuments and spreasheets which are all independent to each other.


How can you use the commands git log and git diff to view the history of files?

git log lets you find the log of the file. All the chnages that were ever committed cn be viewed here.
git diff lets you understand the difference between the different commits. What changes were made to your code.
Though, how do you access any programming language code is one great question which I haven't yet found an answer to. 


How might using version control make you more confident to make changes that could break something?

This would allow one to make changes in the exisitng code without worrying aboout losing the working version. Coder could easily revert back to the working version and then 


Now that you have your workspace set up, what do you want to try using Git for?

For the machine learning course at Udacity. I would use it there. Thanks.